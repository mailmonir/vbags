{"version":3,"file":"commons-4d9dbcde3e753d1cd176.js","mappings":"67BAGA,MAAMA,EAA0B,CAAC,IAAM,GAAK,EAAG,GACfC,EAAG,CAAC,IAAK,KAAM,KAAM,QACrB,CAC9B,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAIvCC,EAAG,EAAI,EAmG3BC,EAAQC,GAA0BC,QAAQF,KAAKC,GAE/CE,EAAc,CAACC,EAAWC,IAAsBD,EAAIC,EAAAA,EAsBhCC,GACxBA,EAAOC,KAAIC,GAAYA,EAAMC,IAAAA,IAAOD,EAAME,MAAAA,MAAUC,KAAK,gBAEzBC,EAACC,GACjC,MAAU,EAAEA,EAASC,YAAY,KACjC,IAAa,IAATC,EAAY,CACd,MAAU,EAAEF,EAASG,MAAMD,EAAM,GACjC,GAAY,SAARE,EACF,MAAM,MAER,GAAmB,IAAfA,EAAIC,QAA+B,IAAfD,EAAIC,OAC1B,OAAO,CAEV,CAEH,CAEgBC,SAAAA,EACdC,GAEA,IAAIC,OACFA,EAAsB,oBACtBX,EAAKY,OACLA,EAAMC,eACNA,EAAcC,YACdA,EAAWC,YACXA,EAAWC,QACXA,EAAU,CAAC,OAAQ,SACjBN,EAIJ,OAHAM,EAAUA,EAAQnB,KAAIoB,GAAUA,EAAOC,gBACvCP,EAASQ,IAAUR,GAEfX,GAASY,EACXQ,EAAAA,CAAAA,EAAYV,EAAMM,CAAAA,QAAAA,EAASL,OAAAA,EAAQI,YAAaf,EAAQY,KAEtDC,EAAeb,OAASa,EAAeD,SAAWG,IACpDA,EAAcF,EAAeb,MAAQa,EAAeD,QAGvC,cAAXD,GACFX,EAAQA,GAASa,EAAeb,OAASc,EAAYA,EAAYN,OAAS,GAC1EI,EAASA,GAAUS,KAAKC,MAAMtB,GAASe,GAAe1B,MAEjDW,IAEDA,EADEY,GAAUG,EACJH,EAASG,EACRF,EAAeb,MAChBa,EAAeb,MACdY,EACDS,KAAKC,MAAMV,EAASvB,GA7KR,KAmLpB0B,IAAgBH,EAClBA,EAASS,KAAKC,MAAMtB,EAAQe,GAClBA,IACVA,EAAcf,EAAQY,IAGdF,EAAAA,CAAAA,EAAAA,EAAAA,CAAMV,MAAAA,EAAOY,OAAAA,EAAQG,YAAAA,EAAaJ,OAAAA,EAAQK,QAAAA,IACxD,YAOEN,EACAV,GAAU,WAAVA,IAAAA,IAAAA,EAAQ,IAERU,EAAOD,EAAqBC,GAC5B,MAAMa,oBAAEA,EAAmBpB,SAAEA,EAAQY,YAAEA,GAAgBL,EACvD,OAOC,SAPMa,EACLpB,EACAH,EACAqB,KAAKC,MAAMtB,EAAQe,GACnBL,EAAKG,eAAeI,QAAU,MAC9BP,EAAKc,IACLd,EAAKe,eAAAA,EANAC,EAOJ3B,GACL,CAEgB4B,SAAAA,EACdjB,GAEAA,EAAOD,EAAqBC,GAE5B,IAAIkB,WACFA,EAAUf,eACVA,EAAcU,oBACdA,EAAmBZ,OACnBA,EAAMa,IACNA,EAAGC,QACHA,EAAOzB,MACPA,EAAKY,OACLA,EAAMT,SACNA,EAAQ0B,SACRA,EAAW,CAAEvC,KAAAA,GAAMwC,gBACnBA,EAAeC,eACfA,GACErB,EAQJ,GANKkB,GACHC,EAASvC,KACP,0EAI+B,mBAAxBiC,EACT,MAAM,UAAU,0CAKhBV,IAAAA,EAFGA,IAAoBA,EAAeb,OAAUa,EAAeD,QAOrDC,EAAeI,SACzBJ,EAAeI,OAASf,EAAmBC,IAN3CU,EAAiB,CACfb,MAAAA,EACAY,OAAAA,EACAK,QAAQ,qBAAgBA,SAAUf,EAAmBC,IAAmB,QAM5E,MAAMa,EAAU,IAAIgB,IAAiBtB,EAAKM,UAErB,IAAjBA,EAAQiB,MAAcjB,EAAQkB,IAAU,SAAKlB,EAAQkB,IAAI,OAC3DlB,EAAQmB,OAAO,QACfnB,EAAQmB,OAAO,IACfnB,EAAQoB,IAAIvB,EAAeI,SAGzBD,EAAQkB,IAAS,QAAKlB,EAAQkB,IAAI,SACpCL,EAASvC,KAAK,IACRsC,EAAAA,oFAGJZ,EAAQmB,OAAO,QADbtB,EAAeI,OACF,MAEA,QAInB,MAAiB,EAyFb,SAA8BP,GAClC,MAAMV,MACJA,EAAKY,OACLA,EAAMT,SACNA,EAAQQ,OACRA,EAAsB,cACtBE,eAAgBwB,EAAaR,SAC7BA,EAAW,CAAEvC,KAAAA,GAAMwB,YACnBA,EAAc1B,GACZsB,EAAAA,EAI4B4B,OAAOC,QADhB,CAAEvC,MAAAA,EAAOY,OAAAA,IAC+B4B,QAC7D,QAAEC,EAAGR,GAAAA,EAAAA,MAA0B,iBAAJ,GAAgBA,EAAO,CAAC,IAErD,GAAIS,EAAwBlC,OAC1B,MAAM,6GAC+FkC,EAChG7C,KAAI8C,GAAOA,EAAI1C,KAAS,QACxBA,KAAK,OAIZ,MAAe,UAAXU,EAAAA,SAAAA,GA0BSrB,IAPiBa,SAC9BA,EACAU,eAAgBwB,EAAarC,MAC7BA,EAAKY,OACLA,EAAMY,IACNA,EAAM,QAAOoB,qBACbA,EAAuBzD,EAAuB0C,SAC9CA,EAAW,CAAEvC,KAAAA,IAAAA,EAEG,EAAE+C,EAAcrC,MAAQqC,EAAczB,OAEtD,MAAM,EAAYiC,EAAuBD,GAGzC,GAAI5C,GAASY,EAAQ,CACnB,MAAMkC,EAAaC,EAA4BV,EAAe,CAC5DrC,MAAAA,EACAY,OAAAA,EACAY,IAAAA,IAEFxB,EAAQ8C,EAAW9C,MACnBY,EAASkC,EAAWlC,OACpBG,EAAc+B,EAAW/B,WAC1B,CAEIf,EAMOY,IACVA,EAASS,KAAKC,MAAMtB,EAAQe,IAH1Bf,EAHGY,EAGKS,KAAKC,MAAMV,EAASG,GA7aN,IAmb1B,MAAoB,EAAEf,EAMtB,GAJEqC,EAAcrC,MAAQA,GAASqC,EAAczB,OAAUA,EAIjC,CACtB,MAAqB,EAAEyB,EAAcrC,MAAQA,EAAe,iBAC5D6B,EAASvC,KAAK,mBACF0D,EAAAA,MACS,UAAnBA,EAA6BhD,EAAQY,GAAAA,qBAClBT,EAAAA,qCAA6C6C,EAAAA,OAChEX,EAAcW,GAAAA,iEAGO,UAAnBA,GACFhD,EAAQqC,EAAcrC,MACtBY,EAASS,KAAKC,MAAMtB,EAAQe,IAG5Bf,GADAY,EAASyB,EAAczB,QACNG,CAEpB,CAOD,MAAO,CACLkC,MANYC,EACXV,QAAOP,GAAQA,GAAQ,IACvBpC,KAAIsD,GAAW9B,KAAKC,MAAM6B,EAAWnD,KACrCwC,QAAOP,GAAQA,GAAQI,EAAcrC,QAItCe,YAAAA,EACAqC,kBAAmBC,EACnBC,mBAAoBjC,KAAKC,MAAM+B,EAAgBtC,GAC/CwC,cAAevD,EAEnB,CA1FMW,CACqBD,GACH,gBAAXC,EAAAA,EACmBD,GACR,cAAXC,EACkB6C,EAAAA,EAAAA,CAAG1C,YAAAA,GAAgBJ,KAE9CmB,EAASvC,KAAK,iDACqCa,EAAAA,sEAA8EQ,GAE1H,CACLsC,MAAO,CAACZ,EAAcrC,OACtBoD,kBAAmBf,EAAcrC,MACjCsD,mBAAoBjB,EAAczB,OAClCG,YAAasB,EAAcrC,MAAQqC,EAAczB,OACjD2C,cAAelB,EAAcrC,OAGnC,CA1CM,CAzFwCU,EAAAA,CAAAA,EAAAA,EAAAA,CAAMG,eAAAA,KAE5C4C,EAAqC,CACzCC,QAAS,IAGX,IAAIT,EAAQvC,EAAKuC,MACZA,IACHA,EA5KoB,EAACjD,EAAeW,KACtC,OAAQA,GAGN,IAAkB,cAChB,MAAM,eAAgBX,EAAAA,OAAYA,EAAAA,YAGpC,IAAY,QACV,OAAUA,EAAAA,KAGZ,IAAgB,YACd,MAAM,QAER,QACE,OAAgB,EAhBE,CA4KH2D,EAAWP,kBAAmBzC,IAGjDK,EAAQ4C,SAAQ3C,IACd,MAAM,EAAS0C,EAAWV,MACvBpD,KAAIoC,IACH,MAAM,EAAWV,EACfpB,EACA8B,EACAZ,KAAKC,MAAMW,EAAO0B,EAAW5C,aAC7BE,EACAO,EACAC,GAEF,SACGoC,GAAAA,EAAU7D,OACV6D,EAASjD,QACTiD,EAAS9D,KACT8D,EAAS5C,OAOZ,OAAO,EALLY,EAASvC,KAAK,IACRsC,EAAAA,4BAAsCzB,EAAAA,8BAAAA,IAM/CqC,OAAOsB,SAEV,GAAe,QAAX7C,GAA+B,QAAXA,GAA+B,SAAXA,EAAmB,CAC7D,MAAM,EACJrB,EAAOmE,MAAKC,GAAOA,EAAIhE,QAAU2D,EAAWJ,iBAAkB3D,EAAO,GAEnEqE,IACFR,EAAOS,SAAW,CAChBnE,IAAKkE,EAASlE,IACdoE,OAAQC,EAAUxE,GAClBqD,MAAAA,GAGL,KAAM,CAAC,IAAD,EACL,WAAOS,UAAPW,EAAgBC,KAAK,CACnBH,OAAQC,EAAUxE,GAClBqD,MAAAA,EACAsB,KAAK,SAAUtD,GAElB,KAGH,MAAM,EAAwC,CAC5CrB,OAAQ6D,EACR9C,OAAAA,EACAmB,gBAAAA,GAOF,OAJIC,IACFyC,EAAWC,YAAc,CAAEP,SAAUnC,IAG/BpB,GACN,IAAY,QACV6D,EAAWxE,MAAQ2D,EAAWP,kBAC9BoB,EAAW5D,OAAS+C,EAAWL,mBAC/B,MAEF,IAAgB,YACdkB,EAAWxE,MAAQ,EACnBwE,EAAW5D,OAAS,EAAI+C,EAAW5C,YACnC,MAEF,IAAkB,cAChByD,EAAWxE,MAAQU,EAAKV,OAAS2D,EAAWP,mBAAqB,EACjEoB,EAAW5D,QAAU4D,EAAWxE,OAAS,GAAK2D,EAAW5C,YAG7D,OAAOyD,CACT,CAEA,MAAM3B,EAA0B6B,GAC9BC,MAAMC,KAAK,IAAI5C,IAAAA,CAAK,kBAAM0C,MAAUG,KAAKpF,GAsHrC,cAOJkB,IAEIsC,GARJpC,eAAgBwB,EAAarC,MAC7BA,EAAKY,OACLA,EAAMY,IACNA,EAAa,6BACboB,EAAuBzD,EAAuB2B,YAC9CA,EAAWH,OACXA,GAAAA,EAGII,EAAcsB,EAAcrC,MAAQqC,EAAczB,OAEtD,MAAgB,EAAEiC,EAAuBD,GAGzC,GAAI5C,GAASY,EAAQ,CACnB,MAAM,EAAamC,EAA4BV,EAAe,CAC5DrC,MAAAA,EACAY,OAAAA,EACAY,IAAAA,IAEFxB,EAAQ8C,EAAW9C,MACnBY,EAASkC,EAAWlC,OACpBG,EAAc+B,EAAW/B,WAC1B,CAGDf,EAAQA,GAASqB,KAAKyD,IAAI9E,EAAOqC,EAAcrC,OAC/CY,EAASA,GAAUS,KAAKyD,IAAIlE,EAAQyB,EAAczB,QAG7CZ,GAAUY,IAEbA,GADAZ,EAAQqB,KAAKyD,IA1fW,IA0fczC,EAAcrC,QACnCe,GAKdf,IACHA,EAASY,EAAoBG,GAG/B,MAAoB,EAAEf,EA8BtB,OA5BEqC,EAAcrC,MAAQA,GAASqC,EAAczB,OAAUA,KAEvDZ,EAAQqC,EAAcrC,MACtBY,EAASyB,EAAczB,QAGzBZ,EAAQqB,KAAKC,MAAMtB,IAAAA,MAEfc,OAAAA,EAAAA,EAAaN,QAAS,GACxByC,EAAQnC,EAAY0B,QAAOP,GAAQA,GAAQI,EAAcrC,QAIvDiD,EAAMzC,OAASM,EAAYN,SAC1ByC,EAAM8B,SAAS1C,EAAcrC,QAE9BiD,EAAMqB,KAAKjC,EAAcrC,SAG3BiD,EAAQC,EAAUrD,KAAIsD,GAAW9B,KAAKC,MAAM6B,EAAWnD,KACvDiD,EAAQA,EAAMT,QAAOP,GAAQA,GAAQI,EAAcrC,SAItC,gBAAXW,GAA6BsC,EAAM8B,SAAS/E,IAC9CiD,EAAMqB,KAAKtE,GAEbiD,EAAQA,EAAM4B,KAAKpF,GACZ,CACLwD,MAAAA,EACAlC,YAAAA,EACAqC,kBAAmBC,EACnBC,mBAAoBjC,KAAKC,MAAM+B,EAAgBtC,GAC/CwC,cAAevD,EAEnB,CAEgB,WACdgF,EACAvD,GAGA,MAAMwD,EAAmBD,EAAWhF,MAAQgF,EAAWpE,OAEvD,IAAU,EAAEa,EAAQzB,MAChBY,EAASa,EAAQb,OAErB,OAAQa,EAAQD,KACd,IAAK,OACHxB,EAAQyB,EAAQzB,MAAQyB,EAAQzB,MAAQgF,EAAWhF,MACnDY,EAASa,EAAQb,OAASa,EAAQb,OAASoE,EAAWpE,OACtD,MAEF,IAAK,SAAU,CACb,MAAkB,EAAEa,EAAQzB,MACxByB,EAAQzB,MACRkF,OAAOC,iBACOC,EAAG3D,EAAQb,OACzBa,EAAQb,OACRsE,OAAOC,iBAEXnF,EAAQqB,KAAKyD,IAAIO,EAAahE,KAAKC,MAAM8D,EAAeH,IACxDrE,EAASS,KAAKyD,IACZM,EACA/D,KAAKC,MAAM+D,EAAcJ,IAE3B,KACD,CACD,IAAK,UAAW,CACd,MAAkB,EAAExD,EAAQzB,MAAQyB,EAAQzB,MAAQ,EAC9CoF,EAAe3D,EAAQb,OAASa,EAAQb,OAAS,EAEvDZ,EAAQqB,KAAKiE,IAAID,EAAahE,KAAKC,MAAM8D,EAAeH,IACxDrE,EAASS,KAAKiE,IACZF,EACA/D,KAAKC,MAAM+D,EAAcJ,IAE3B,KACD,CAED,QACMxD,EAAQzB,QAAUyB,EAAQb,SAC5BZ,EAAQyB,EAAQzB,MAChBY,EAASS,KAAKC,MAAMG,EAAQzB,MAAQiF,IAGlCxD,EAAQb,SAAWa,EAAQzB,QAC7BA,EAAQqB,KAAKC,MAAMG,EAAQb,OAASqE,GACpCrE,EAASa,EAAQb,QAKvB,MAAO,CACLZ,MAAAA,EACAY,OAAAA,EACAG,YAAaf,EAAQY,EAEzB,yICjmBa2E,EAA2B,IACC,oBAAhCC,kBACP,YAA6BA,iBAACC,UAgBhC,MAAM,EAwBJC,IACgC,MAEhC,MA3BwB,CAExBA,IAA4B,eAGrB5B,QAAC4B,MAAAA,GAAAA,OAAAA,EAAAA,EAAM9F,SAAgB,OAAtB+F,EAAAA,EAAczB,eAAAA,EAAdwB,EAAwB3F,IAAG,EALX,CA2BF2F,GAErBA,EAtB6B,CAE9BA,GACsC5B,QAAQ4B,MAAAA,OAAAA,EAAAA,EAAME,iBAHtB,CAwBFF,GACfA,EAACE,gBApBY,CAE1BF,GACkC5B,QAAQ4B,MAAAA,OAAAA,EAAAA,EAAMG,aAHtB,CAuBFH,GACfA,EAAKG,YAEH,SAAiB,OAAjBC,EAAJJ,EAAMK,sBAAAA,EAAND,EAAuBF,eAAe,EAGlCI,EAAUN,IACrBO,IAAAA,EAAAA,EAAAA,EAAAA,OAAc,OAAdA,EAAAA,EAASP,KAAa,OAARQ,EAAdC,EAAgBvG,SAAhB,OAAsBwG,EAAtBF,EAAwBhC,eAAAA,EAAxBkC,EAAkCrG,GAAG,EAEjBqE,EAAIsB,IAAmB,iBAC3C,OAD2CW,EAC3CJ,EAASP,KAAa,OAAtBY,EAAAA,EAAgB1G,SAAhB,OAAsB2G,EAAtBD,EAAwBpC,eAAAA,EAAxB,EAAkCC,MAAM,EAANA,SAAAA,EAGlCnE,EACAY,EACAD,GAIA,MAAM6F,EAA8B,CAAC,EAErC,IAAc,EAAE,uBAmBhB,MAXe,UAAX7F,GACF6F,EAAaxG,MAAQA,EACrBwG,EAAa5F,OAASA,GACF,gBAAXD,IAKT8F,EAAAA,yDAGK,CACLA,UAAAA,EACA,4BAA+B,GAC/BC,MAAOF,EAEX,CAyDgB,SAAYG,EAAAA,GAAc,kBACxCC,EAAOC,WACPA,EAAUC,YACVA,EAAWC,aACXA,EAAYnF,WACZA,EAA2B,uBAC3BZ,EAAU,CAAC,QAAOF,YAClBA,EAAWW,QACXA,GACGuF,EAAAA,EAEHC,EAAAA,EAAAA,GAmCA,OAlCG,eAAazG,QACe,cAA5BwG,EAAMrG,QAAmE,eAAxCqG,EAAMrG,SAExCG,EAAcoG,GA+BTvF,EARFqF,EAAAA,CAAAA,EAAAA,EACHpF,CAAAA,WAAAA,EACAL,oBAvB0B,CAC1BqF,EACA5G,EACAY,EACAK,KAAAA,CAGEjB,MAAAA,EACAY,OAAAA,EACAK,OAAAA,EACAlB,IAAK8G,EAAW,CAAED,QAAAA,EAAS5G,MAAAA,EAAOY,OAAAA,EAAQa,QAAAA,EAASR,OAAAA,MAcrDd,SAAUyG,EACV5F,QAAAA,EACAF,YAAAA,EACAD,eAb+D,CAC/Db,MAAO8G,EACPlG,OAAQmG,EACR9F,OAAc,UAalB,CAEgB,SAAYkG,EAC1BC,EACAC,EACAzH,EACA0H,EACAZ,GA4BA,YA5BAA,IAAAA,IAAAA,EAAuB,CAAC,GAkBnB9G,EAAAA,CAAAA,EAAAA,EACH0H,CAAAA,QAAAA,EACAC,WAAYH,EACZ,kBAAqB,GACrBV,MAAKtF,EAAAA,CAAAA,EACAsF,EAAK,CACRc,QAASH,EAAW,EAAI,KAK9B,UAOmCI,EACjChD,EACA4C,EACA1G,EACAX,EACAY,EACAkB,EACA4F,EACAC,GAEA,MAAkBnB,EAAkB,CAAC,EAEjC1E,IACF0E,EAAa1E,gBAAkBA,EAEhB,UAAXnB,GACF6F,EAAaxG,MAAQA,EACrBwG,EAAa5F,OAASA,EACtB4F,EAAa1E,gBAAkBA,EAC/B0E,EAAaoB,SAAW,aACJ,gBAAXjH,GAMW,cAAXA,KALT6F,EAAaoB,SAAW,WACxBpB,EAAaqB,IAAM,EACnBrB,EAAasB,KAAO,EACpBtB,EAAauB,OAAS,EACtBvB,EAAawB,MAAQ,IAUrBN,IACFlB,EAAakB,UAAYA,GAGvBC,IACFnB,EAAamB,eAAiBA,GAEhC,MAAYlE,EAAAA,EAAAA,CAAAA,EACPgB,EAAW,CACd,eAAc,EACd,yBAA4B,GAC5BiC,MACEc,EAAAA,CAAAA,QAASH,EAAW,EAAI,EACxBY,WAAkC,wBAC/BzB,KAeP,OACF/C,CAAAA,CAkBgB,SAAgByE,EAC9BC,EACAC,GAAAA,IAAAA,EAAAA,EAEA,MAAMxI,OAAEA,EAAM6E,YAAEA,GAA0B0D,EACpCE,EACDrB,EAAAA,CAAAA,EAAAA,EAFqCmB,EAAYG,GAGpD1I,CAAAA,OACKA,EAAAA,CAAAA,EAAAA,EACH8D,CAAAA,QAAS,KAEXe,YAAaA,GAAWrD,EAAAA,CAAAA,EACnBqD,EAAW,CACdf,QAAS,OA4CX,MAEF,OA1CA0E,EAAYxE,SAAQ,IAAU9D,IAAAA,EAAAA,IAAPyI,MAAAA,EAAOzI,MAAAA,GAAAA,EACvByI,IAUHzI,EAAMa,OAAWwH,EAAaxH,QAQhC0H,EAAAA,EAAOzI,OAAO8D,SAAQY,KAAAA,MAAAA,GAAAA,EAAAA,EAAAA,GACjBxE,EAAMF,OAAO8D,QAAQ7D,KAAI2I,GACdA,EAAAA,CAAAA,EAAAA,EAAQD,CAAAA,MAAAA,OAAAA,OAAAA,CAEtB,CACEA,MAAAA,EACApE,OAAQrE,EAAMF,OAAOsE,SAASC,WAI7BkE,EAAO5D,aAIZ4D,EAAO5D,YAAYf,QAAQY,KAAK,CAC9BiE,MAAAA,EACApE,OAAQrE,EAAM2E,YAAYP,WAE9B,KACAmE,EAAAA,EAAOzI,OAAO8D,SAAQY,KAAAA,MAAAA,GAAAA,EAAAA,EAAAA,GAAQ1E,EAAO8D,UACtB,MAAXe,GAAAA,EAAaf,UACG,OAAlB+E,EAAAA,EAAOhE,eAAPgE,EAAAA,EAAoB/E,SAAQY,KAAAA,MAAAA,GAAAA,EAAAA,EAAAA,GAAQG,EAAYf,WAGpD2E,CAAAA,CCnZA,qBAkEWK,EAA2C,YAGpD9H,IAHmED,OACnEA,EAAMX,MACNA,EAAKY,OACLA,GAAAA,EAEA,MAAe,cAAXD,EAEAgI,EAAAA,cAAiBC,MAAAA,CAAAA,eAAAA,EAAAA,MAAO,CAAEC,WAAgBjI,EAASZ,EAAS,IAAnB,OAI9B,gBAAXW,EAEAgI,EAAAA,cAAAA,MAAAA,CAAKjC,MAAO,CAAEoC,SAAU9I,EAAO+I,QAAS,UACtCJ,EAAAA,cAAAA,MAAAA,CACEK,IAAI,GACJC,KAAK,eACO,qBACZlJ,IAAAA,qDAA0Da,EAAAA,cAAoBZ,EAAAA,sEAC9E0G,MAAO,CACLoC,SAAgB,OAChBC,QAAgB,QAChBnB,SAAkB,aAOrB,IACT,EAE0BsB,EAEtB,SAA6CC,GAAAA,IAAtBC,SAAEA,GAAoBD,EAAPnC,EAAKC,EAAAA,EAAAA,GAC7C,OACE0B,EAAAA,cAACU,EAAAA,SAAQ,KACPV,EAAAA,cAACC,EAAU5B,EAAAA,CAAAA,EAAAA,IACVoC,EAEmC,KAG1C,wFC1EWE,EAAkC,SAAcH,GAAAA,IAACpJ,IAC1DA,EAAGoE,OACHA,EAAMmD,QACNA,EAAO0B,IACPA,EAAQ,cACRzB,GACGP,EAAAA,EAEHC,EAAAA,EAAAA,GAAAA,OACE0B,EAAAA,cAAAA,MAAAA,EAAAA,CAAAA,EACM3B,EAAK,CACTuC,SAAS,QACTjC,QAASA,EACTvH,IAAKwH,EAAaxH,OAAAA,EAAe,WACtBwH,OAAAA,EAAaxH,EACxBoE,OAAQoD,EAAapD,OAAAA,EACR,cAACoD,OAAAA,EAAapD,EAC3B6E,IAAKA,IAGX,EAEoBQ,EAA2B,SAAgBC,GAAC,aAC9DvF,EAAQR,QACRA,EAAU,GAAE6D,WACZA,GAAAA,GAEDkC,EADIzC,EAEHC,EAAAA,EAAAA,GAAAA,MAAAA,EAAcD,EAAM/D,QAASiB,MAAAA,OAAAA,EAAAA,EAAUjB,OAAAA,EAErC0F,EAAAA,cAACW,EAAUtC,EAAAA,CAAAA,EAAAA,EAAW9C,EAAUjB,CAAAA,MAAOA,EAAOsE,WAAYA,KAG5D,OAAK7D,EAAQlD,OAAAA,EAAAA,cAKXoI,UAAAA,KACGlF,EAAQ7D,KAAI,QAAG0I,MAAAA,EAAOpE,OAAAA,EAAQI,KAAAA,GAAAA,EAAAA,OAC7BoE,EAAAA,cAAAA,SAAAA,CACEe,IAAQnB,EAAAA,IAAShE,EAAAA,IAAQJ,EACzBI,KAAMA,EACNgE,MAAOA,EACPpE,OAAQoD,EAAapD,OAAAA,EACR,cAACoD,OAAAA,EAAapD,EAC3BlB,MAAOA,GAAAA,IAGV0G,GAAAA,CAGP,ECvFA,MDyFAL,EAAMM,UAAY,CAChB7J,IAAK8J,EAAAA,OAAAA,WACLb,IAAKa,EAAAA,OAAAA,WACL5G,MAAO4G,EAAAA,OACP1F,OAAQ0F,EAAAA,OACRtC,WAAYsC,EAAAA,MAGdL,EAAQM,YAAc,UACtBN,EAAQI,UAAY,CAClBZ,IAAKa,EAAAA,OAAAA,WACLtC,WAAYsC,EAAAA,KACZ3F,SAAU2F,EAAAA,MAAgB,CACxB9J,IAAK8J,EAAAA,OAAAA,WACL1F,OAAQ0F,EAAAA,OACR5G,MAAO4G,EAAAA,SAETnG,QAASmG,EAAAA,QACPA,EAAAA,UAAoB,CAClBA,EAAAA,MAAgB,CACdtB,MAAOsB,EAAAA,OAAAA,WACPtF,KAAMsF,EAAAA,OACN5G,MAAO4G,EAAAA,OACP1F,OAAQ0F,EAAAA,OAAAA,aAEVA,EAAAA,MAAgB,CACdtB,MAAOsB,EAAAA,OACPtF,KAAMsF,EAAAA,OAAAA,WACN5G,MAAO4G,EAAAA,OACP1F,OAAQ0F,EAAAA,OAAAA,iBCtHhB,qBASaE,EACX,SAAoBZ,GAAC,aAAEjF,GAAa8C,EAAAA,EAAAA,EAAAA,EAAAA,GAClC,OAAI9C,EAEAyE,EAAAA,cAACC,EACK5B,EAAAA,CAAAA,EAAAA,EACJ9C,CAAAA,SAAU,CACRnE,IAAKmE,GACN,iBAED8E,IAAI,sBAIDJ,MAAS5B,EAAAA,CAAAA,EAAAA,GAEpB,EAEF+C,EAAYD,YAAc,cAC1BC,EAAYH,UAAY,CACtB1F,SAAU2F,EAAAA,OACVnG,QAA0B,OAAnBsG,EAAER,EAAQI,gBAAAA,EAARI,EAAmBtG,QAC5BsF,IAAK,SAAUhC,EAAOiD,EAAUC,GAC9B,OAAKlD,EAAMiD,GAIJ,IAASE,MAAAA,iBACIF,EAAAA,kBAA4BC,EAAAA,yBAH/C,IAKH,GClCWE,MAAAA,EAAoC,SAAmBpD,GAClE,OACE2B,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAY5B,EAAAA,CAAAA,EAAAA,IACb2B,EAAAA,cAAAA,WAAAA,KACEA,EAAAA,cAACC,EAAY5B,EAAAA,CAAAA,EAAAA,EAAAA,CAAOO,YAAAA,MAI5B,EAEA6C,EAAUN,YAAc,YACxBM,EAAUR,UAAYJ,EAAQI,UAAAA,MAAAA,EAAAA,CAAAA,KAAAA,YAAAA,QAAAA,QAAAA,QAAAA,UAAAA,eAAAA,WAAAA,kBAAAA,YAAAA,kBAAAA,EAAAA,CAAAA,QAAAA,aCRxBS,EAAkBC,GAAwBA,EAAIC,QAAQ,MAAO,IAmHtDC,EAA4C,SACvDxD,EACAiD,EACAC,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OACGO,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,OAEEzD,EAAMgC,KAAqB,KAAdhC,EAAMgC,IAMRa,IAAAA,OAAAA,MAAAA,IAAAA,CAAQ7C,EAAOiD,EAAUC,GAAAA,OAAkBO,IALlD,IAAIN,MAAM,iCACkBD,EAAAA,0JAAAA,EAOjBN,EAAG,CACvB9J,MAAO+J,IAAAA,OAAAA,WACPb,IAAKwB,GC7IPE,EAAAA,CAAAA,KAAAA,QAAAA,QAAAA,kBAAAA,YAAAA,QAAAA,cAAAA,SAAAA,WAAAA,EAAAA,CAAAA,QAAAA,aAAAA,GA4BmB,IAAI1I,IACvB,IAA8B2I,GACyBC,GAgCvD,MAAMC,GAA4C,SAWjD1B,GAAAA,IAX8E2B,GAC7EA,EAAU,YACVhL,EAAK4G,MACLA,EAAK5E,gBACLA,EAAe2E,UACfA,EACAsE,MAAOC,EAAWC,YAClBA,EAAWC,OACXA,EAAMC,QACNA,GAEDhC,EADInC,EAEHC,EAAAA,EAAAA,GAAAA,MAAMjH,MAAEA,EAAKY,OAAEA,EAAMD,OAAEA,GAAWb,EAAAA,EAK9BsL,EAAgBpL,EAAOY,EAAQD,IAHjC+F,MAAO2E,EACP5E,UAAW6E,GACRC,EAAAA,EAAAA,EAAAA,EAAAA,GAECC,GAAOC,EAAAA,EAAAA,UAAAA,GACIC,EAAAA,EAAAA,UAAQ,IAAMC,KAAKC,UAAU9L,EAAMF,SAAS,CAACE,EAAMF,SAGhEoL,IACFvE,EAAYuE,GAGd,MAAY,EAADa,SLxCXlL,EACAX,EACAY,GAEA,IAAU,EAAE,GAWZ,MAVe,cAAXD,IACFkL,EAAAA,+CACGjL,EAASZ,EAAS,kBAIR,gBAAXW,IACFkL,EAAAA,0BAAkC7L,EAAAA,mIAAuIY,EAAAA,cAAoBZ,EAAAA,6IAGxL6L,CACT,CKwBaA,CAAYlL,EAAQX,EAAOY,GA+HtC,OA7HAkL,EAAAA,EAAAA,YAAU,KACHnB,KACHA,GAA6BoB,QAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,OAAAA,KAAAA,EAAAA,KAAAA,EAAAA,OAAyBC,MACpD,QAAGC,oBAAAA,EAAqBC,qBAAAA,GAAAA,EAAAA,OACtBtB,GAAcqB,EAEP,CACLA,oBAAAA,EACAC,qBAAAA,EAAAA,KAQR,MAAMC,EAAWX,EAAKY,QAAQC,cACH,2BAE3B,GAAIF,GAAY5G,IAkCd,OAjCI4G,EAASG,UAAAA,MAEXrB,GAAAA,EAAc,CACZsB,WAAU,IAAC,MAEbrB,GAAAA,EAAS,CACPqB,WAAU,IAIZC,YAAW,KACTL,EAASM,gBAAgB,2BACxB,KAEQ,MAAXxB,GAAAA,EAAc,CACZsB,WAAU,IAGZJ,EAASO,iBAAuB,QAAE,SAAS,IACzCP,EAASQ,oBAAoB,OAAQC,GAE/B,MAAN1B,GAAAA,EAAS,CACPqB,WAAU,IAGZC,YAAW,KACTL,EAASM,gBAAgB,wBAAuB,GAC/C,EACL,UAGFI,GAAWzK,IAAI0K,GAKjB,GAAIlC,IAAeiC,GAAW3K,IAAI4K,GAChC,OAGF,IAAIC,EACAC,EAiCJ,OAhCArC,GAA2BqB,MACzB,IAAwBE,IAArBD,oBAAAA,EAAqBC,qBAAAA,GAAAA,EACjBV,EAAKY,UAIVZ,EAAKY,QAAQa,UAAYhB,EAAAA,EAAAA,CACvB7E,WAAU,EACVC,SAAUwF,GAAW3K,IAAI4K,GACzBhN,MAAAA,GACGkH,IAGA6F,GAAW3K,IAAI4K,KAClBC,EAAiBG,uBAAsB,KACjC1B,EAAKY,UACPY,EAAkBd,EAChBV,EAAKY,QACLU,EACAD,GACAnG,EACAuE,EACAC,EACAC,GAEH,KAEJ,IAKE,KACD4B,GACFI,qBAAqBJ,GAEnBC,GACFA,GACD,CACH,GACC,CAAClN,KAGJsN,EAAAA,EAAAA,kBAAgB,KACVP,GAAW3K,IAAI4K,IAAalC,KAC9BY,EAAKY,QAAQa,UAAYrC,GACvBxD,EAAAA,CAAAA,UAAWyF,GAAW3K,IAAI4K,GAC1BzF,SAAUwF,GAAW3K,IAAI4K,GACzBhN,MAAAA,GACGkH,IAAAA,MAILiE,GAAAA,EAAc,CACZsB,WAAU,IAAC,MAEbrB,GAAAA,EAAS,CACPqB,WAAU,IAEb,GACA,CAACzM,KAGG8I,EAAAA,EAAAA,eAAckC,EAAAA,EAAAA,CAAAA,EAChBS,EAAY,CACf7E,MAAKtF,EAAAA,CAAAA,EACAiK,EACA3E,EACH5E,CAAAA,gBAAAA,IAEF2E,UAAc6E,GAAS7E,EAAAA,IAAgBA,EAAAA,IACvC4G,IAAK7B,EACL8B,wBAAyB,CACvBC,OAAQ1B,GAEV2B,0BAAyB,IAE7B,EAEwBC,IAAwCC,EAAAA,EAAAA,OAC9D,SAAqB1G,GACnB,OAAKA,EAAMlH,OAcJ8I,EAAAA,EAAAA,eAAciC,GAAqB7D,GARzC,IASH,IAGFyG,GAAY7D,UAAYA,EACxB6D,GAAY3D,YAAc,cC5P1B,4PAsBgB6D,SAAAA,GACdF,GAEA,OAAgBG,SAuBfzE,GAAAA,IAvB2BpJ,IAC1BA,EACA8N,YAAaC,EAASC,QACtBA,GAmBG/G,EAAAA,EAEHC,EAAAA,EAAAA,IAIA,OAJI8G,GACFvO,QAAQF,KAAKyO,GAGXD,EACKnF,EAAAA,cAAC8E,EAAY3N,EAAAA,CAAAA,MAAOgO,GAAe9G,KAE5CxH,QAAQF,KAAK,mBAAoBS,GAOnC,MACF,CAEA,MAAiB6N,GACfD,IFvDA,SAAoBxE,GAAAA,IAAC2B,GACnBA,EAAAA,MAAUrE,UACVA,EACAsE,MAAOC,EAAWtE,MAClBA,EAAK5G,MACLA,EAAKwH,QACLA,EAAgB,oBAChB0G,EAAYC,SACZA,EAAQnM,gBACRA,EAAe4F,UACfA,EAASC,eACTA,GAAAA,EACGX,EAAKC,EAAAA,EAAAA,GAER,IAAKnH,EAEH,OADAN,QAAQF,KAAK,4CACN,KAGL0L,IACFvE,EAAYuE,GAGdiD,EAAAA,EAAAA,CACEvG,UAAAA,EACAC,eAAAA,EACA7F,gBAAAA,GACGmM,GAGL,MAAMjO,MACJA,EAAKY,OACLA,EAAMD,OACNA,EAAMf,OACNA,EAAM6E,YACNA,EACA3C,gBAAiBoM,GACfpO,EAMAsL,EAAAA,EAAgBpL,EAAOY,EAAQD,IAHjC+F,MAAO2E,EACP5E,UAAW6E,GACRC,EAAAA,EAAAA,EAAAA,EAAAA,GAGC4C,EAA4C,CAChDjK,cAAS,EACTR,QAAS,IAoBX,OAlBI9D,EAAOsE,WACTiK,EAAcjK,SAAQ9C,EAAAA,CAAAA,EACjBxB,EAAOsE,SAAS,CACnBC,OAAQvE,EAAOsE,SAASC,OACpBkG,EAAezK,EAAOsE,SAASC,aAAAA,KAKnCvE,EAAO8D,UACTyK,EAAczK,QAAU9D,EAAO8D,QAAQ7D,KAAI2I,GAAAA,EAAAA,CAAAA,EAEpCA,EAAM,CACTrE,OAAQkG,EAAe7B,EAAOrE,aAAAA,EAAAA,cAMlC2G,EAEKS,EAAAA,CAAAA,EAAAA,EAAAA,CACH7E,MAAKtF,EAAAA,CAAAA,EACAiK,EACA3E,EAAK,CACR5E,gBAAAA,IAEF2E,UAAc6E,GAAS7E,EAAAA,IAAgBA,EAAAA,MAEzCkC,EAAAA,cAACC,EAAc,CAAAjI,OAAQA,EAAQX,MAAOA,EAAOY,OAAQA,GACnD+H,EAAAA,cAACC,EAAWxH,EAAAA,CAAAA,EACNqG,EACFhD,GAAAA,EAEA9D,EACAX,EACAY,EACAsN,EACAxG,EACAC,KAIJgB,EAAAA,cAACC,EACuBxH,EAAAA,CAAAA,wBAAAA,GACtBqF,UAAWuH,GACNhH,EAKDG,EACU,UAAZG,GAAAA,EAEA6G,EACA7G,EACA2G,MAKV,IErDuBG,GAAgC,SACvDpH,EACAiD,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OACGQ,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,MAG2B,cAA5BzD,EAAMrG,QACQ,UAAbsJ,GAAAA,WAAwBA,IACzBjD,EAAMiD,GAAAA,IAAAA,OAAAA,MAAAA,IAAAA,CAMgBjD,EAAOiD,GAAAA,OAAaQ,IAJnC,IAASN,MAAAA,IACVF,EAAAA,KAAajD,EAAMiD,GAAAA,+CAAAA,EAMXoE,GAAG,IAAIrM,IAAI,CAAQ,QAAa,YAAe,gBAEpD4H,GAAY,CACvB7J,IAAK8J,IAAAA,OAAAA,WACLb,IAAKwB,EACLxK,MAAOoO,GACPxN,OAAQwN,GACRnL,MAAO4G,IAAAA,OACPlJ,OAASqG,IACP,YAAIA,EAAMrG,SAGN0N,GAAanM,IAAI8E,EAAMrG,QAI3B,OAAWwJ,IAAAA,MAAAA,iBACQnD,EAAMrG,OAAAA,qHAA0H,GAKvJiN,GAAY9D,YAAc,cAC1B8D,GAAYhE,UAAYA,GC7FlBgE,MAAAA,GACJD,GAAgBW,IAElBV,GAAY9D,YAAc,cAC1B8D,GAAYhE,UAAYA,E,mBClBxB,MA6BMzI,EAAY,CAACoN,EAAO9M,KACzB,GAAuB,iBAAV8M,IAAsB5J,MAAM6J,QAAQD,GAChD,MAAM,IAAIE,UAAU,gDAGrBhN,EAAUa,OAAOoM,OAAO,CACvBC,YAAY,GACVlN,GAYH,GAPC8M,EADG5J,MAAM6J,QAAQD,GACTA,EAAM1O,KAAI+O,GAAKA,EAAEC,SACvBrM,QAAOoM,GAAKA,EAAEpO,SACdP,KAAK,KAECsO,EAAMM,OAGM,IAAjBN,EAAM/N,OACT,MAAO,GAGR,GAAqB,IAAjB+N,EAAM/N,OACT,OAAOiB,EAAQkN,WAAaJ,EAAMO,cAAgBP,EAAMrN,cAezD,OAZqBqN,IAAUA,EAAMrN,gBAGpCqN,EA3DwBQ,KACzB,IAAIC,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOvO,OAAQ2O,IAAK,CACvC,MAAMC,EAAYL,EAAOI,GAErBH,GAAmB,WAAWK,KAAKD,IAAcA,EAAUN,gBAAkBM,GAChFL,EAASA,EAAOzO,MAAM,EAAG6O,GAAK,IAAMJ,EAAOzO,MAAM6O,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KACUF,GAAmBC,GAAuB,WAAWG,KAAKD,IAAcA,EAAUlO,gBAAkBkO,GAC9GL,EAASA,EAAOzO,MAAM,EAAG6O,EAAI,GAAK,IAAMJ,EAAOzO,MAAM6O,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EAAkBI,EAAUlO,gBAAkBkO,GAAaA,EAAUN,gBAAkBM,EACvFF,EAAsBD,EACtBA,EAAkBG,EAAUN,gBAAkBM,GAAaA,EAAUlO,gBAAkBkO,EAEzF,CAEA,OAAOL,CAAM,EAiCJO,CAAkBf,IAG3BA,EAAQA,EACNhE,QAAQ,YAAa,IACrBrJ,cACAqJ,QAAQ,mBAAmB,CAAC9H,EAAG8M,IAAOA,EAAGT,gBACzCvE,QAAQ,cAAciF,GAAKA,EAAEV,gBA5BXF,EA8BDL,EA9BM9M,EAAQkN,WAAaC,EAAEa,OAAO,GAAGX,cAAgBF,EAAEtO,MAAM,GAAKsO,EAAnEA,KA8BK,EAG1Bc,EAAOC,QAAUxO,EAEjBuO,EAAOC,QAAPD,QAAyBvO,C,mGCUzB,MAhFe,IAEX,0BAAQsF,UAAU,UAChB,uBAAKA,UAAU,mBACb,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,KACP,gBAAC,EAAAC,EAAW,CACV/P,IAAI,2BACJiJ,IAAI,mBACJvC,UAAU,eAAc,wBAK9B,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,sBACb,sBAAIA,UAAU,gBACZ,sBAAIA,UAAU,gBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,IAAIpJ,UAAU,gBAAe,SAIxC,sBAAIA,UAAU,gBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,YAAYpJ,UAAU,gBAAe,aAIhD,sBAAIA,UAAU,gBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,WAAWpJ,UAAU,gBAAe,YAI/C,sBAAIA,UAAU,gBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,SAASpJ,UAAU,gBAAe,UAI7C,sBAAIA,UAAU,gBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,WAAWpJ,UAAU,gBAAe,cAOnD,uBAAKA,UAAU,gBACb,qBAAGA,UAAU,gBAAe,qJAQhC,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,qBAAoB,MAC9B,IAAIsJ,MAAOC,cAAc,8CAG9B,sBAAIvJ,UAAU,uBACZ,sBAAIA,UAAU,uBACZ,qBAAGA,UAAU,sBAAsBwJ,KAAK,wBACtC,gBAAC,MAAW,QAGhB,sBAAIxJ,UAAU,uBACZ,qBAAGA,UAAU,sBAAsBwJ,KAAK,uBACtC,gBAAC,MAAS,QAGd,sBAAIxJ,UAAU,uBACZ,qBAAGA,UAAU,sBAAsBwJ,KAAK,wBACtC,gBAAC,MAAY,WCuB3B,MA7Fe,KACb,MAAOC,EAAOC,GAAYxH,EAAAA,UAAe,IAClCyH,EAAYC,GAAiB1H,EAAAA,UAAe,IAC5C2H,EAAUC,GAAe5H,EAAAA,UAAe,GAE/CA,EAAAA,WAAgB,KACd,MAAM6H,EAAeC,IACnBC,OAAOC,QAAU,GAAKR,GAAS,GAAQA,GAAS,EAAM,EAKxD,OAFAO,OAAOhE,iBAAiB,SAAU8D,GAE3B,KACLE,OAAO/D,oBAAoB,SAAU6D,EAAa,CACnD,GACA,IAcH,OACE,uBAAK/J,UAAS,WAAYyJ,EAAQ,YAAc,KAC9C,gBAAC,EAAAN,KAAI,CAACC,GAAG,KACP,gBAAC,EAAAC,EAAW,CACVrJ,UAAU,aACV1G,IAAI,2BACJiJ,IAAI,4BACJrI,OAAO,YAAW,sBAEpB,gBAAC,EAAAmP,EAAW,CACVrJ,UAAU,OACV1G,IAAI,qBACJiJ,IAAI,sBAAqB,uBAI7B,uBACEvC,UAAS,gBAAiB2J,EAAa,cAAgB,IACvDQ,QA9Ba,KACjBP,GAAcQ,IAAUA,IACxBN,GAAYM,IAAUA,GAAM,GA+BxB,wBAAMpK,UAAU,aAAY,MAG9B,uBAAKA,UAAS,gBAAiB6J,EAAW,OAAS,KAIjD,sBAAI7J,UAAU,OACZ,sBAAIA,UAAU,kBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,IAAIpJ,UAAU,aAAY,SAIrC,sBAAIA,UAAU,kBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,YAAYpJ,UAAU,aAAY,aAI7C,sBAAIA,UAAU,kBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,WAAWpJ,UAAU,aAAY,YAI5C,sBAAIA,UAAU,kBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,SAASpJ,UAAU,aAAY,UAI1C,sBAAIA,UAAU,kBACZ,gBAAC,EAAAmJ,KAAI,CAACC,GAAG,WAAWpJ,UAAU,aAAY,cAOhD,0BAAQA,UAAU,UAChB,gBAAC,MAAQ,OAEP,ECtFV,MANe,QAAC,UAAEqK,GAAW,SAC3B,8BACE,gBAAC,EAAM,MACA,EC8BX,MAtBe,IAAmB,IAAD,MAAjB,SAAE1H,GAAU,EAC1B,MAAM2H,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACF,WAAiC,QAAtB,EAAAC,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,2BACE,4BAAO/H,IAET,gBAAC,EAAM,MACN,C,wDChCA,I,UCCIgI,EAAiB,CAC1BC,WAAOC,EACPrP,UAAMqP,EACN7K,eAAW6K,EACX5K,WAAO4K,EACPC,UAAMD,GAEGE,EAAc,iBAAuB,gBAAoBJ,GCRhEK,EAAoC,WAQtC,OAPAA,EAAWnP,OAAOoM,QAAU,SAAUgD,GACpC,IAAK,IAAIC,EAAGxC,EAAI,EAAGyC,EAAIC,UAAUrR,OAAQ2O,EAAIyC,EAAGzC,IAE9C,IAAK,IAAI2C,KADTH,EAAIE,UAAU1C,GACO7M,OAAOmD,UAAUsM,eAAeC,KAAKL,EAAGG,KAAIJ,EAAEI,GAAKH,EAAEG,IAE5E,OAAOJ,CACT,EACOD,EAASQ,MAAMC,KAAML,UAC9B,EACIM,EAAgC,SAAUR,EAAGS,GAC/C,IAAIV,EAAI,CAAC,EACT,IAAK,IAAII,KAAKH,EAAOrP,OAAOmD,UAAUsM,eAAeC,KAAKL,EAAGG,IAAMM,EAAEC,QAAQP,GAAK,IAAGJ,EAAEI,GAAKH,EAAEG,IAC9F,GAAS,MAALH,GAAqD,mBAAjCrP,OAAOgQ,sBAA2C,KAAInD,EAAI,EAAb,IAAgB2C,EAAIxP,OAAOgQ,sBAAsBX,GAAIxC,EAAI2C,EAAEtR,OAAQ2O,IAClIiD,EAAEC,QAAQP,EAAE3C,IAAM,GAAK7M,OAAOmD,UAAU8M,qBAAqBP,KAAKL,EAAGG,EAAE3C,MAAKuC,EAAEI,EAAE3C,IAAMwC,EAAEG,EAAE3C,IADuB,CAGvH,OAAOuC,CACT,EAGA,SAASc,EAAaC,GACpB,OAAOA,GAAQA,EAAK5S,KAAI,SAAU6F,EAAMyJ,GACtC,OAAO,gBAAoBzJ,EAAKgN,IAAKjB,EAAS,CAC5C/H,IAAKyF,GACJzJ,EAAK6L,MAAOiB,EAAa9M,EAAKiN,OACnC,GACF,CACO,SAASC,EAAQ7B,GAEtB,OAAO,SAAU/J,GACf,OAAO,gBAAoB6L,EAAUpB,EAAS,CAC5CF,KAAME,EAAS,CAAC,EAAGV,EAAKQ,OACvBvK,GAAQwL,EAAazB,EAAK4B,OAC/B,CACF,CACO,SAASE,EAAS7L,GACvB,IAAI8L,EAAO,SAAUC,GACnB,IAKItM,EALA8K,EAAOvK,EAAMuK,KACftP,EAAO+E,EAAM/E,KACbkP,EAAQnK,EAAMmK,MACd6B,EAAWb,EAAOnL,EAAO,CAAC,OAAQ,OAAQ,UACxCiM,EAAehR,GAAQ8Q,EAAK9Q,MAAQ,MAIxC,OAFI8Q,EAAKtM,YAAWA,EAAYsM,EAAKtM,WACjCO,EAAMP,YAAWA,GAAaA,EAAYA,EAAY,IAAM,IAAMO,EAAMP,WACrE,gBAAoB,MAAOgL,EAAS,CACzCyB,OAAQ,eACRC,KAAM,eACNC,YAAa,KACZL,EAAKxB,KAAMA,EAAMyB,EAAU,CAC5BvM,UAAWA,EACXC,MAAO+K,EAASA,EAAS,CACvBJ,MAAOrK,EAAMqK,OAAS0B,EAAK1B,OAC1B0B,EAAKrM,OAAQM,EAAMN,OACtB9F,OAAQqS,EACRjT,MAAOiT,EACPI,MAAO,+BACLlC,GAAS,gBAAoB,QAAS,KAAMA,GAAQnK,EAAMoC,SAChE,EACA,YAAuBkI,IAAhBE,EAA4B,gBAAoBA,EAAY8B,SAAU,MAAM,SAAUP,GAC3F,OAAOD,EAAKC,EACd,IAAKD,EAAK1B,EACZ,C","sources":["webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/footer.js","webpack://gatsby-starter-default/./src/components/navbar.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconContext.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconBase.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport { Link } from \"gatsby\"\r\nimport { FaFacebookF, FaTwitter, FaLinkedinIn } from \"react-icons/fa\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__logobox\">\r\n        <Link to=\"/\">\r\n          <StaticImage\r\n            src=\"../images/logo-white.png\"\r\n            alt=\"victor bags logo\"\r\n            className=\"footer__logo\"\r\n          />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"footer__middle\">\r\n        <div className=\"footer__navigation\">\r\n          <ul className=\"footer__list\">\r\n            <li className=\"footer__item\">\r\n              <Link to=\"/\" className=\"footer__link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"footer__item\">\r\n              <Link to=\"/products\" className=\"footer__link\">\r\n                Products\r\n              </Link>\r\n            </li>\r\n            <li className=\"footer__item\">\r\n              <Link to=\"/gallery\" className=\"footer__link\">\r\n                Gallery\r\n              </Link>\r\n            </li>\r\n            <li className=\"footer__item\">\r\n              <Link to=\"/about\" className=\"footer__link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"footer__item\">\r\n              <Link to=\"/contact\" className=\"footer__link\">\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"footer__text\">\r\n          <p className=\"footer__info\">\r\n            Victor Leather Bags Factory Ltd. is a Bangladeshi manufacturing and\r\n            exporting unit of backpack, laptop bag, hiking bag, luggage and\r\n            ladies bag.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"footer__bottom\">\r\n        <div className=\"footer__copyright\">\r\n          © {new Date().getFullYear()} &middot; Victor Bags BD Ltd. All right\r\n          reserved.\r\n        </div>\r\n        <ul className=\"footer__list-social\">\r\n          <li className=\"footer__item-social\">\r\n            <a className=\"footer__link-social\" href=\"https://facebook.com\">\r\n              <FaFacebookF />\r\n            </a>\r\n          </li>\r\n          <li className=\"footer__item-social\">\r\n            <a className=\"footer__link-social\" href=\"https://twitter.com\">\r\n              <FaTwitter />\r\n            </a>\r\n          </li>\r\n          <li className=\"footer__item-social\">\r\n            <a className=\"footer__link-social\" href=\"https://linkedin.com\">\r\n              <FaLinkedinIn />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { FaSearch } from \"react-icons/fa\"\r\n\r\nconst Navbar = () => {\r\n  const [navUp, setNavUp] = React.useState(false)\r\n  const [rotateBars, setRotateBars] = React.useState(false)\r\n  const [openMenu, setOpenMenu] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    const handleScroll = event => {\r\n      window.scrollY > 10 ? setNavUp(true) : setNavUp(false)\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleScroll)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll)\r\n    }\r\n  }, [])\r\n\r\n  const handlClick = () => {\r\n    setRotateBars(state => !state)\r\n    setOpenMenu(state => !state)\r\n  }\r\n\r\n  const handleKeyUp = e => {\r\n    if (e.key === \"Enter\") {\r\n      setRotateBars(state => !state)\r\n      setOpenMenu(state => !state)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className={`navbar ${navUp ? \"float-nav\" : \"\"}`}>\r\n      <Link to=\"/\">\r\n        <StaticImage\r\n          className=\"logo-white\"\r\n          src=\"../images/logo-white.png\"\r\n          alt=\"Victor Bags BD Logo White\"\r\n          layout=\"fullWidth\"\r\n        />\r\n        <StaticImage\r\n          className=\"logo\"\r\n          src=\"../images/logo.png\"\r\n          alt=\"Victor Bags BD Logo\"\r\n        />\r\n      </Link>\r\n\r\n      <div\r\n        className={`nav__button ${rotateBars ? \"rotate-bars\" : \"\"}`}\r\n        onClick={handlClick}\r\n        // onKeyUp={handleKeyUp}\r\n      >\r\n        <span className=\"nav__icon\">&nbsp;</span>\r\n      </div>\r\n\r\n      <div className={`nav-wrapper ${openMenu ? \"open\" : \"\"}`}>\r\n        {/* <a href=\"#\" className=\"closebtn\">\r\n          &times;\r\n        </a> */}\r\n        <ul className=\"nav\">\r\n          <li className=\"nav__list-item\">\r\n            <Link to=\"/\" className=\"nav__link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav__list-item\">\r\n            <Link to=\"/products\" className=\"nav__link\">\r\n              Products\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav__list-item\">\r\n            <Link to=\"/gallery\" className=\"nav__link\">\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav__list-item\">\r\n            <Link to=\"/about\" className=\"nav__link\">\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav__list-item\">\r\n            <Link to=\"/contact\" className=\"nav__link\">\r\n              Contact\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <button className=\"search\">\r\n        <FaSearch />\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import * as React from \"react\"\r\nimport Navbar from \"./navbar\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <Navbar />\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Footer from \"./footer\"\r\n\r\nimport Header from \"./header\"\r\n// import \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div>\r\n        <main>{children}</main>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","DEFAULT_ASPECT_RATIO","warn","message","console","sortNumeric","a","b","images","map","image","src","width","join","formatFromFilename","filename","lastIndexOf","dot","slice","ext","length","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","_extends","Math","round","generateImageSource","fit","options","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Set","size","has","delete","add","imgDimensions","Object","entries","filter","_","erroneousUserDimensions","dim","outputPixelDensities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","fixedDimension","sizes","densities","density","presentationWidth","originalWidth","presentationHeight","unscaledWidth","responsiveImageSizes","result","sources","imageSizes","forEach","imageSrc","Boolean","find","img","unscaled","fallback","srcSet","getSrcSet","_result$sources","push","type","imageProps","placeholder","values","Array","from","sort","min","includes","dimensions","imageAspectRatio","Number","MAX_SAFE_INTEGER","heightOption","widthOption","max","hasNativeLazyLoadSupport","HTMLImageElement","prototype","node","_node$images$fallback","gatsbyImageData","gatsbyImage","_node$childImageSharp","childImageSharp","getSrc","getImage","_getImage$images","_getImage","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","wrapperStyle","className","style","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","EVERY_BREAKPOINT","getMainProps","isLoading","isLoaded","loading","shouldLoad","opacity","getPlaceholderProps","objectFit","objectPosition","position","top","left","bottom","right","transition","withArtDirection","defaultImage","artDirected","output","_excluded2","media","source","_output$placeholder","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","LayoutWrapper","_ref","children","Fragment","Image","decoding","Picture","_ref2","key","fallbackImage","propTypes","PropTypes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","replace","altValidator","rest","_excluded","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","cacheKey","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","validLayouts","GatsbyImageBrowser","input","isArray","TypeError","assign","pascalCase","x","trim","toUpperCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","preserveCamelCase","p1","m","charAt","module","exports","Link","to","S","Date","getFullYear","href","navUp","setNavUp","rotateBars","setRotateBars","openMenu","setOpenMenu","handleScroll","event","window","scrollY","onClick","state","siteTitle","data","useStaticQuery","site","siteMetadata","title","DefaultContext","color","undefined","attr","IconContext","__assign","t","s","n","arguments","p","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","tag","child","GenIcon","IconBase","elem","conf","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","Consumer"],"sourceRoot":""}